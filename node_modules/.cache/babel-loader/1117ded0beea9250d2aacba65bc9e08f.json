{"ast":null,"code":"import _toConsumableArray from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/SearchPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport Book from './Book';\nimport SearchBar from './SearchBar';\nvar currentlyReadingBooks = [];\nvar wantToReadBooks = [];\nvar readBooks = [];\nvar uncategorizedBooks = [];\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n\n    _this.searchBooks = function (query) {\n      BooksAPI.search(query).then(function (result) {\n        if (typeof result === 'undefined') {\n          _this.setState({\n            filteredBooks: _this.props.categorizedBooks\n          });\n        } else {\n          _this.setState({\n            filteredBooks: result\n          });\n        }\n      });\n    };\n\n    _this.getBooksWithShelves = function () {\n      var categorizedBooks = _this.props.categorizedBooks;\n      var filteredBooks = _this.state.filteredBooks;\n      var books = [];\n      var isCategorized = false;\n\n      if (filteredBooks.length > 0) {\n        var currentFilteredBooks = _toConsumableArray(filteredBooks);\n\n        currentFilteredBooks.forEach(function (filteredBook) {\n          isCategorized = false; // categorizedBooks.forEach(book => {\n          //     if (book.id === filteredBook.id) {\n          //         isCategorized = true\n          //         return\n          //     }\n          // })\n          // if (!isCategorized) {\n          //     filteredBook.shelf = 'none'\n          //     books.push(filteredBook)\n          // }\n\n          if (!filteredBook.shelf) {\n            filteredBook.shelf = 'none';\n            books.push(filteredBook);\n          }\n        });\n      }\n\n      return books;\n    };\n\n    _this.state = {\n      filteredBooks: []\n    };\n    return _this;\n  } //Search and filter books \n\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      uncategorizedBooks = [];\n      this.getBooksWithShelves().forEach(function (book) {\n        if (book.shelf === 'none') {\n          uncategorizedBooks.push(book);\n        }\n      });\n      var uncategorizedBookItems = uncategorizedBooks.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onShelfSelectionChanged: _this2.props.onShelfSelectionChanged,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        searchBooks: this.searchBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, uncategorizedBookItems)));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/SearchPage.js"],"names":["React","Component","Link","BooksAPI","Book","SearchBar","currentlyReadingBooks","wantToReadBooks","readBooks","uncategorizedBooks","SearchPage","props","searchBooks","query","search","then","result","setState","filteredBooks","categorizedBooks","getBooksWithShelves","state","books","isCategorized","length","currentFilteredBooks","forEach","filteredBook","shelf","push","book","uncategorizedBookItems","map","id","onShelfSelectionChanged"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\nimport SearchBar from './SearchBar'\n\nlet currentlyReadingBooks = []\nlet wantToReadBooks = []\nlet readBooks = []\nlet uncategorizedBooks = []\n\nclass SearchPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            filteredBooks: []\n        }\n    }\n\n    //Search and filter books \n    searchBooks = (query) => {\n        BooksAPI.search(query).then((result) => {\n                if (typeof result === 'undefined') {\n                    this.setState({\n                        filteredBooks: this.props.categorizedBooks,\n                    })\n                } else {\n                    this.setState({\n                        filteredBooks: result,\n                    })\n                }\n            })\n    }\n\n    //Get filtered books and add them \n    getBooksWithShelves = () => {\n        const { categorizedBooks } = this.props\n        const { filteredBooks } = this.state\n\n        let books = []\n        let isCategorized = false\n\n        if (filteredBooks.length > 0) {\n            const currentFilteredBooks = [...filteredBooks]\n\n            currentFilteredBooks.forEach((filteredBook) => {\n                isCategorized = false\n                // categorizedBooks.forEach(book => {\n                //     if (book.id === filteredBook.id) {\n                //         isCategorized = true\n                //         return\n                //     }\n                // })\n                // if (!isCategorized) {\n                //     filteredBook.shelf = 'none'\n                //     books.push(filteredBook)\n                // }\n                if (!filteredBook.shelf){\n                    filteredBook.shelf = 'none'\n                    books.push(filteredBook)\n                }\n            })\n        }\n        return books\n    }\n\n    render() {\n        uncategorizedBooks = []\n\n        this.getBooksWithShelves().forEach(book => {\n            if (book.shelf === 'none') { uncategorizedBooks.push(book) }\n        })\n\n        let uncategorizedBookItems = uncategorizedBooks.map((book) => {\n            return (\n                <Book\n                    key={book.id}\n                    book={book}\n                    onShelfSelectionChanged={this.props.onShelfSelectionChanged}\n                />\n            )\n        })\n\n        return (\n            <div className=\"search-books\">\n                <SearchBar searchBooks={this.searchBooks}/>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {uncategorizedBookItems}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage"]},"metadata":{},"sourceType":"module"}