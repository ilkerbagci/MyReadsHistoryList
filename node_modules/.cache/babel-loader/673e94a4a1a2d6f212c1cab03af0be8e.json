{"ast":null,"code":"import _toConsumableArray from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport MainPage from './MainPage';\nimport { Route } from 'react-router-dom'; //import SearchPage from './SearchPage';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.getBooks = function () {\n      BooksAPI.getAll().then(function (result) {\n        _this.setState({\n          books: result\n        });\n      });\n    };\n\n    _this.onSelectionChanged = function (event, book) {\n      var shelf = event.target.value;\n      var isBookMatched = false;\n\n      var booksWithUpdatedShelves = _this.state.books.map(function (oldBook, index) {\n        if (oldBook.id === book.id) {\n          isBookMatched = true;\n          book.shelf = shelf;\n          return book;\n        }\n\n        return oldBook;\n      });\n\n      _this.setBooksState(isBookMatched, booksWithUpdatedShelves, book, shelf);\n    };\n\n    _this.setBooksState = function (isBookMatched, booksWithUpdatedShelves, book, shelf) {\n      if (isBookMatched) {\n        _this.setState(function (prevState) {\n          return {\n            books: booksWithUpdatedShelves\n          };\n        });\n      } else {\n        book.shelf = shelf;\n\n        _this.setState(function (currentState) {\n          return {\n            books: _toConsumableArray(currentState.books).concat([book])\n          };\n        });\n      }\n\n      _this.updateBookShelfOnServer(book, shelf);\n    };\n\n    _this.updateBookShelfOnServer = function (book, shelf) {\n      BooksAPI.update(book, shelf);\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(MainPage, {\n            books: _this2.state.books,\n            onSelectionChanged: _this2.onSelectionChanged,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js"],"names":["React","BooksAPI","MainPage","Route","BooksApp","state","books","getBooks","getAll","then","result","setState","onSelectionChanged","event","book","shelf","target","value","isBookMatched","booksWithUpdatedShelves","map","oldBook","index","id","setBooksState","prevState","currentState","updateBookShelfOnServer","update","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAQRC,Q,GAAW,YAAM;AACfN,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,MAAD,EAAY;AACjC,cAAKC,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAEI;AADK,SAAd;AAGD,OAJD;AAKD,K;;UAEDE,kB,GAAqB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACpC,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA3B;AACA,UAAIC,aAAa,GAAG,KAApB;;AAEA,UAAIC,uBAAuB,GAAG,MAAKd,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrE,YAAGD,OAAO,CAACE,EAAR,KAAeT,IAAI,CAACS,EAAvB,EAA2B;AACzBL,UAAAA,aAAa,GAAG,IAAhB;AACAJ,UAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACA,iBAAOD,IAAP;AACD;;AACD,eAAOO,OAAP;AACD,OAP6B,CAA9B;;AAQA,YAAKG,aAAL,CAAmBN,aAAnB,EAAkCC,uBAAlC,EAA2DL,IAA3D,EAAiEC,KAAjE;AACD,K;;UAEDS,a,GAAgB,UAACN,aAAD,EAAgBC,uBAAhB,EAAyCL,IAAzC,EAA+CC,KAA/C,EAAyD;AACvE,UAAGG,aAAH,EAAkB;AAChB,cAAKP,QAAL,CAAc,UAAAc,SAAS;AAAA,iBAAK;AAC1BnB,YAAAA,KAAK,EAAEa;AADmB,WAAL;AAAA,SAAvB;AAGD,OAJD,MAIM;AACJL,QAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;;AACA,cAAKJ,QAAL,CAAc,UAAAe,YAAY;AAAA,iBAAK;AAC7BpB,YAAAA,KAAK,qBAAMoB,YAAY,CAACpB,KAAnB,UAA0BQ,IAA1B;AADwB,WAAL;AAAA,SAA1B;AAGD;;AACD,YAAKa,uBAAL,CAA6Bb,IAA7B,EAAkCC,KAAlC;AACD,K;;UAEDY,uB,GAA0B,UAACb,IAAD,EAAOC,KAAP,EAAiB;AACzCd,MAAAA,QAAQ,CAAC2B,MAAT,CAAgBd,IAAhB,EAAsBC,KAAtB;AACD,K;;;;;;;wCA3CmB;AAClB,WAAKR,QAAL;AACD;;;6BA2CQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AACE,QAAA,MAAM,EAAE;AAAA,iBACN,oBAAC,QAAD;AACE,YAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWC,KADpB;AAEE,YAAA,kBAAkB,EAAE,MAAI,CAACM,kBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADF;AAgBD;;;;EAnEoBZ,KAAK,CAAC6B,S;;AAsE7B,eAAezB,QAAf","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport MainPage from './MainPage'\nimport { Route } from 'react-router-dom'\n//import SearchPage from './SearchPage';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  getBooks = () => {\n    BooksAPI.getAll().then((result) => {\n      this.setState({\n        books: result\n      });\n    });\n  }\n\n  onSelectionChanged = (event, book) => {\n    const shelf = event.target.value\n    let isBookMatched = false;\n\n    let booksWithUpdatedShelves = this.state.books.map((oldBook, index) => {\n      if(oldBook.id === book.id) {\n        isBookMatched = true\n        book.shelf = shelf\n        return book\n      } \n      return oldBook\n    })\n    this.setBooksState(isBookMatched, booksWithUpdatedShelves, book, shelf);  \n  }\n\n  setBooksState = (isBookMatched, booksWithUpdatedShelves, book, shelf) => {\n    if(isBookMatched) {  \n      this.setState(prevState => ({\n        books: booksWithUpdatedShelves,\n      }))\n    }else {\n      book.shelf = shelf\n      this.setState(currentState => ({\n        books: [...currentState.books, book]\n      }))\n    }\n    this.updateBookShelfOnServer(book,shelf)\n  }\n  \n  updateBookShelfOnServer = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n          {/* <Route path='/search' render={() => (\n                <SearchPage\n                  shelfBooks = {this.state.books}\n                  onSelectionChanged={this.onSelectionChanged}\n                />\n            )} /> */}\n          <Route exact path='/'\n            render={() => (\n              <MainPage\n                books={this.state.books}\n                onSelectionChanged={this.onSelectionChanged}/> \n            )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}