{"ast":null,"code":"import _classCallCheck from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/MainPage.js\";\nimport React, { Component } from \"react\";\nimport Shelf from \"./Shelf.js\";\nimport { Link } from \"react-router-dom\";\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage() {\n    _classCallCheck(this, MainPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MainPage).apply(this, arguments));\n  }\n\n  _createClass(MainPage, [{\n    key: \"render\",\n    value: function render() {\n      var currentlyReadingBooks = [];\n      var wantToReadBooks = [];\n      var readBooks = []; //Assign each book to their shelves\n\n      this.props.books.forEach(function (book) {\n        if (book.shelf === \"currentlyReading\") {\n          currentlyReadingBooks.push(book);\n        } else if (book.shelf === \"wantToRead\") {\n          wantToReadBooks.push(book);\n        } else if (book.shelf === \"read\") {\n          readBooks.push(book);\n        }\n      }); //Create each shelf\n\n      return React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"My Reads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Shelf, {\n        books: currentlyReadingBooks,\n        shelfName: \"Currently Reading\",\n        onSelectionChanged: this.props.onSelectionChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        books: wantToReadBooks,\n        shelfName: \"Want To Read\",\n        onSelectionChanged: this.props.onSelectionChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        books: readBooks,\n        shelfName: \"Read\",\n        onSelectionChanged: this.props.onSelectionChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"open-search\",\n        to: \"/search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Add a book\")));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/MainPage.js"],"names":["React","Component","Shelf","Link","MainPage","currentlyReadingBooks","wantToReadBooks","readBooks","props","books","forEach","book","shelf","push","onSelectionChanged"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AACP,UAAIC,qBAAqB,GAAG,EAA5B;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,SAAS,GAAG,EAAhB,CAHO,CAKP;;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC7B,YAAIA,IAAI,CAACC,KAAL,KAAe,kBAAnB,EAAuC;AAAEP,UAAAA,qBAAqB,CAACQ,IAAtB,CAA2BF,IAA3B;AAAkC,SAA3E,MACK,IAAIA,IAAI,CAACC,KAAL,KAAe,YAAnB,EAAiC;AAAEN,UAAAA,eAAe,CAACO,IAAhB,CAAqBF,IAArB;AAA4B,SAA/D,MACA,IAAIA,IAAI,CAACC,KAAL,KAAe,MAAnB,EAA2B;AAAEL,UAAAA,SAAS,CAACM,IAAV,CAAeF,IAAf;AAAsB;AAC3D,OAJD,EANO,CAYP;;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,KAAK,EAAIN,qBADb;AAEI,QAAA,SAAS,EAAC,mBAFd;AAGI,QAAA,kBAAkB,EAAE,KAAKG,KAAL,CAAWM,kBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAMA,oBAAC,KAAD;AACI,QAAA,KAAK,EAAIR,eADb;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,kBAAkB,EAAE,KAAKE,KAAL,CAAWM,kBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAWA,oBAAC,KAAD;AACI,QAAA,KAAK,EAAIP,SADb;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,kBAAkB,EAAE,KAAKC,KAAL,CAAWM,kBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,CAJF,EAqBE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CArBF,CADF;AA2BD;;;;EAzCoBb,S;;AA4CvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from \"react\"\nimport Shelf from \"./Shelf.js\"\nimport { Link } from \"react-router-dom\"\n\nclass MainPage extends Component {\n  render() {\n    let currentlyReadingBooks = []\n    let wantToReadBooks = []\n    let readBooks = []\n\n    //Assign each book to their shelves\n    this.props.books.forEach(book => {\n        if (book.shelf === \"currentlyReading\") { currentlyReadingBooks.push(book) }\n        else if (book.shelf === \"wantToRead\") { wantToReadBooks.push(book) } \n        else if (book.shelf === \"read\") { readBooks.push(book) }\n    })\n\n    //Create each shelf\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>My Reads</h1>\n        </div>\n        <div className=\"list-books-content\">\n        <Shelf\n            books = {currentlyReadingBooks}\n            shelfName='Currently Reading'\n            onSelectionChanged={this.props.onSelectionChanged}\n        />\n        <Shelf\n            books = {wantToReadBooks}\n            shelfName='Want To Read'\n            onSelectionChanged={this.props.onSelectionChanged}\n        />  \n        <Shelf\n            books = {readBooks}\n            shelfName='Read'\n            onSelectionChanged={this.props.onSelectionChanged}\n        /> \n        </div>\n        <Link className=\"open-search\" to=\"/search\">\n            <button>Add a book</button>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default MainPage\n"]},"metadata":{},"sourceType":"module"}