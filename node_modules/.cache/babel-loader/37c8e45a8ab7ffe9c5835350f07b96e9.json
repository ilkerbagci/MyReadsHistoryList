{"ast":null,"code":"import _classCallCheck from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport MainPage from './MainPage';\nimport { Route } from 'react-router-dom';\nimport SearchPage from './SearchPage';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.getBooks = function () {\n      BooksAPI.getAll().then(function (result) {\n        _this.setState({\n          books: result\n        });\n      });\n    };\n\n    _this.onShelfSelectionChanged = function (event, book) {\n      BooksAPI.update(book, shelf);\n      var shelf = event.target.value;\n      var isBookMatched = false; //Switch book's shelf\n\n      var booksWithUpdatedShelves = _this.state.books.map(function (oldBook, index) {\n        if (oldBook.id === book.id) {\n          isBookMatched = true;\n          book.shelf = shelf;\n          return book;\n        }\n\n        return oldBook;\n      });\n\n      if (isBookMatched === true) {\n        _this.setState(function (prevState) {\n          return {\n            books: booksWithUpdatedShelves\n          };\n        });\n      } else {\n        book.shelf = shelf;\n\n        _this.setState(function (currentState) {\n          return {\n            books: [currentState.books, book]\n          };\n        });\n      } //this.setBookState(isBookMatched, booksWithUpdatedShelves, book, shelf)\n\n    };\n\n    _this.setBookState = function (isBookMatched, booksWithUpdatedShelves, book, shelf) {\n      if (isBookMatched === true) {\n        _this.setState(function (prevState) {\n          return {\n            books: booksWithUpdatedShelves\n          };\n        });\n      } else {\n        book.shelf = shelf;\n\n        _this.setState(function (currentState) {\n          return {\n            books: [currentState.books, book]\n          };\n        });\n      }\n\n      _this.updateBookShelfOnServer(book, shelf);\n    };\n\n    _this.updateBookShelfOnServer = function (book, shelf) {\n      BooksAPI.update(book, shelf);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBooks();\n    } //Get all books from BooksAPI, setState of books as result of API call\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchPage, {\n            shelfBooks: _this2.state.books,\n            onShelfSelectionChanged: _this2.onShelfSelectionChanged,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(MainPage, {\n            books: _this2.state.books,\n            onShelfSelectionChanged: _this2.onShelfSelectionChanged,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js"],"names":["React","BooksAPI","MainPage","Route","SearchPage","App","state","books","getBooks","getAll","then","result","setState","onShelfSelectionChanged","event","book","update","shelf","target","value","isBookMatched","booksWithUpdatedShelves","map","oldBook","index","id","prevState","currentState","setBookState","updateBookShelfOnServer","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport MainPage from './MainPage'\nimport { Route } from 'react-router-dom'\nimport SearchPage from './SearchPage'\n\nclass App extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    this.getBooks()\n  }\n\n  //Get all books from BooksAPI, setState of books as result of API call\n  getBooks = () => {\n    BooksAPI.getAll().then((result) => {\n      this.setState({\n        books: result\n      })\n    })\n  }\n\n  //Change book's shelf when selection changed\n  onShelfSelectionChanged = (event, book) => {\n\n    BooksAPI.update(book, shelf)\n\n    const shelf = event.target.value\n    let isBookMatched = false\n\n    //Switch book's shelf\n    let booksWithUpdatedShelves = this.state.books.map((oldBook, index) => {\n      if(oldBook.id === book.id) {\n        isBookMatched = true\n        book.shelf = shelf\n        return book\n      } \n      return oldBook\n    })\n\n    if(isBookMatched === true) {  \n      this.setState(prevState => ({\n        books: booksWithUpdatedShelves\n      }))\n    }else {\n      book.shelf = shelf\n      this.setState(currentState => ({\n        books: [currentState.books, book]\n      }))\n    }\n\n    //this.setBookState(isBookMatched, booksWithUpdatedShelves, book, shelf)\n  }\n\n  //Set book's state\n  setBookState = (isBookMatched, booksWithUpdatedShelves, book, shelf) => {\n    if(isBookMatched === true) {  \n      this.setState(prevState => ({\n        books: booksWithUpdatedShelves\n      }))\n    }else {\n      book.shelf = shelf\n      this.setState(currentState => ({\n        books: [currentState.books, book]\n      }))\n    }\n\n    this.updateBookShelfOnServer(book,shelf)\n  }\n  \n  //Update book's sheld on server with API call\n  updateBookShelfOnServer = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n           <Route path='/search' render={() => (\n              <SearchPage\n                shelfBooks = {this.state.books}\n                onShelfSelectionChanged={this.onShelfSelectionChanged}\n              />\n            )} />\n          <Route exact path='/' render={() => (\n              <MainPage\n                books={this.state.books}\n                onShelfSelectionChanged={this.onShelfSelectionChanged}/> \n            )} />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}