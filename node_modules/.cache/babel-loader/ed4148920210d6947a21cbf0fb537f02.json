{"ast":null,"code":"import _toConsumableArray from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport MainPage from './MainPage';\nimport { Route } from 'react-router-dom'; //import SearchPage from './SearchPage';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      bookList: []\n    };\n\n    _this.getBooks = function () {\n      BooksAPI.getAll().then(function (result) {\n        _this.setState({\n          bookList: result\n        });\n      });\n    };\n\n    _this.onSelectionChanged = function (event, book) {\n      var shelf = event.target.value;\n      BooksAPI.update(book, shelf);\n      var isBooksMatched = false; //const newItems = [...this.state.bookList];\n\n      var newBooks = _this.state.bookList.map(function (mBook, index) {\n        if (mBook.id === book.id) {\n          isBooksMatched = true;\n          book.shelf = shelf;\n          return book;\n        }\n\n        return mBook;\n      });\n\n      if (isBooksMatched) {\n        _this.setState(function (prevState) {\n          return {\n            bookList: newBooks\n          };\n        });\n      } else {\n        book.shelf = shelf;\n\n        _this.setState(function (currentState) {\n          return {\n            bookList: _toConsumableArray(currentState.bookList).concat([book])\n          };\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBooks();\n    }\n  }, {\n    key: \"render\",\n    // onSelectionChanged = (event, book) => {\n    //   const newShelf = event.target.value;\n    //   let newBookList = [];\n    //   BooksAPI.update(book, newShelf)\n    //     .then(result => {\n    //       if (result != null) {\n    //         newBookList = this.state.books.map(oldBook => {\n    //           if (oldBook.id === book.id) {\n    //             book.shelf = newShelf;\n    //             return book;\n    //           }\n    //           return oldBook;\n    //         });\n    //       }\n    //       this.setState({\n    //         bookList: newBookList\n    //       });\n    //     })\n    //     .catch(error => console.log(error));\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(MainPage, {\n            books: _this2.state.bookList,\n            onSelectionChanged: _this2.onSelectionChanged,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/ibagci/Documents/React/Projects/ReactND-MyReads/src/App.js"],"names":["React","BooksAPI","MainPage","Route","BooksApp","state","bookList","getBooks","getAll","then","result","setState","onSelectionChanged","event","book","shelf","target","value","update","isBooksMatched","newBooks","map","mBook","index","id","prevState","currentState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAQRC,Q,GAAW,YAAM;AACfN,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,MAAD,EAAY;AACjC,cAAKC,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAEI;AADE,SAAd;AAGD,OAJD;AAKD,K;;UAEDE,kB,GAAqB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACpC,UAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAhB,MAAAA,QAAQ,CAACiB,MAAT,CAAgBJ,IAAhB,EAAsBC,KAAtB;AAEA,UAAII,cAAc,GAAG,KAArB,CAJoC,CAMpC;;AAEA,UAAIC,QAAQ,GAAG,MAAKf,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACvD,YAAGD,KAAK,CAACE,EAAN,KAAaV,IAAI,CAACU,EAArB,EAAyB;AACvBL,UAAAA,cAAc,GAAG,IAAjB;AACAL,UAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACA,iBAAOD,IAAP;AACD;;AAAC,eAAOQ,KAAP;AACH,OANc,CAAf;;AAQA,UAAGH,cAAH,EAAmB;AACjB,cAAKR,QAAL,CAAc,UAAAc,SAAS;AAAA,iBAAK;AAC1BnB,YAAAA,QAAQ,EAAEc;AADgB,WAAL;AAAA,SAAvB;AAGD,OAJD,MAIM;AACJN,QAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;;AACA,cAAKJ,QAAL,CAAc,UAAAe,YAAY;AAAA,iBAAK;AAC7BpB,YAAAA,QAAQ,qBAAMoB,YAAY,CAACpB,QAAnB,UAA6BQ,IAA7B;AADqB,WAAL;AAAA,SAA1B;AAGD;AAEF,K;;;;;;;wCAvCmB;AAClB,WAAKP,QAAL;AACD;;;AAuCD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AACE,QAAA,MAAM,EAAE;AAAA,iBACN,oBAAC,QAAD;AACE,YAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWC,QADpB;AAEE,YAAA,kBAAkB,EAAE,MAAI,CAACM,kBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADF;AAgBD;;;;EArFoBZ,KAAK,CAAC2B,S;;AAwF7B,eAAevB,QAAf","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport MainPage from './MainPage'\nimport { Route } from 'react-router-dom'\n//import SearchPage from './SearchPage';\n\nclass BooksApp extends React.Component {\n  state = {\n    bookList: []\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  getBooks = () => {\n    BooksAPI.getAll().then((result) => {\n      this.setState({\n        bookList: result\n      });\n    });\n  }\n\n  onSelectionChanged = (event, book) => {\n    let shelf = event.target.value\n    BooksAPI.update(book, shelf)\n    \n    let isBooksMatched = false;\n\n    //const newItems = [...this.state.bookList];\n\n    let newBooks = this.state.bookList.map((mBook, index) => {\n      if(mBook.id === book.id) {\n        isBooksMatched = true\n        book.shelf = shelf\n        return book;\n      } return mBook\n    }) \n\n    if(isBooksMatched) {  \n      this.setState(prevState => ({\n        bookList: newBooks,\n      }))\n    }else {\n      book.shelf = shelf\n      this.setState(currentState => ({\n        bookList: [...currentState.bookList, book]\n      }))\n    }\n          \n  }\n\n  // onSelectionChanged = (event, book) => {\n  //   const newShelf = event.target.value;\n  //   let newBookList = [];\n\n  //   BooksAPI.update(book, newShelf)\n  //     .then(result => {\n  //       if (result != null) {\n  //         newBookList = this.state.books.map(oldBook => {\n  //           if (oldBook.id === book.id) {\n  //             book.shelf = newShelf;\n  //             return book;\n  //           }\n  //           return oldBook;\n  //         });\n  //       }\n  //       this.setState({\n  //         bookList: newBookList\n  //       });\n  //     })\n  //     .catch(error => console.log(error));\n  // };\n  \n  render() {\n    return (\n      <div className=\"app\">\n          {/* <Route path='/search' render={() => (\n                <SearchPage\n                  shelfBooks = {this.state.bookList}\n                  onSelectionChanged={this.onSelectionChanged}\n                />\n            )} /> */}\n          <Route exact path='/'\n            render={() => (\n              <MainPage\n                books={this.state.bookList}\n                onSelectionChanged={this.onSelectionChanged}/> \n            )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}